scale_fill_viridis_c(na.value = "transparent")+
theme_light()
print(pl)
}
}
templateEstimate <- function(tagdata = GRKN_breed, calibration = calib,
bbox = bbox, resolution = 15,
adjust = 300,
window = 24,
exclude = TRUE,
ingnoreNegatives = 5,
ncores = detectCores(),
plot = TRUE)
templateEstimate(tagdata = GRKN_breed, calibration = calib,
bbox = bbox, resolution = 15,
adjust = 300,
window = 24,
exclude = TRUE,
ingnoreNegatives = 5,
ncores = detectCores(),
plot = TRUE)
mapRast %>% st_as_sf() %>% st_centroid()
rastOut <-  mapRast %>% st_as_sf() %>% st_centroid() %>% mutate(p = apply(pOut, 1, max)) %>% dplyr::select(p) %>%
st_rasterize(st_as_stars(st_bbox(bbox$map), dx = (resolution+2)*1000, dy = (resolution+2)*1000, values = NA_real_))
pl <- ggplot() +
geom_sf(data = mapRast %>% st_as_sf() %>% st_centroid(), fill = "grey90", color = "grey10", show.legend = F) +
geom_stars(data = rastOut) +
scale_fill_viridis_c(na.value = "transparent")+
theme_light()
print(pl)
pl <- ggplot() +
geom_sf(data = map, fill = "grey90", color = "grey10", show.legend = F) +
geom_stars(data = rastOut) +
scale_fill_viridis_c(na.value = "transparent")+
theme_light()
print(pl)
pl <- ggplot() +
geom_sf(data = bbox$map, fill = "grey90", color = "grey10", show.legend = F) +
geom_stars(data = rastOut) +
scale_fill_viridis_c(na.value = "transparent")+
theme_light()
print(pl)
templateEstimate <- function(tagdata,
calibration,
bbox,
resolution = 15,
adjust = 300,
window = 24,
exclude = TRUE,
ingnoreNegatives = 5,
ncores = detectCores(),
plot = TRUE) {
sf_use_s2(FALSE)
mapRast <- st_rasterize(bbox$map %>% st_as_sf(), st_as_stars(st_bbox(bbox$map),
dx = resolution*1000, dy = resolution*1000, values = NA_real_))
centr <- map %>% st_centroid() %>% st_transform(4326) %>% st_coordinates()
crds  <- mapRast %>% st_as_sf() %>% st_centroid() %>% st_transform(4326) %>% st_coordinates() %>% suppressWarnings() %>% suppressMessages()
ss   <- solar(tagdata$Date)
zX   <- refracted(zenith(ss, centr[1,1], centr[1,2]))
dat  <- tagdata %>% as_tibble() %>%
mutate(ct = c(c(zX[-length(zX)]>zX[-1]), TRUE),
Date = as.POSIXct(ifelse(!ct, Date - adjust, Date), origin = "1970-01-01")) %>%
group_split(Window = cut(as.numeric((Date - Date[1])/60/60), window*c(0:nrow(.)), labels = FALSE, include.lowest = T))
if(ncores > 1) {
cl <- makeCluster(getOption("cl.cores", ncores))
clusterExport(cl, c('dat', 'calibration', 'crds', 'zenith', 'solar', 'refracted', 'exclude'), envir = environment())
pOut <- parLapply(cl, dat, function(x) {
p_log <- apply(crds, 1, function(p) {
zX    <- refracted(zenith(solar(x$Date), p[1], p[2]))
ExpL  <- calibration$MaxL(zX)
diffL <- (ExpL -  x$Light+0.05)
ind <- cut(zX, breaks = calibration$calibTab[,1], labels = FALSE)
sum(unlist(sapply(unique(ind), function(x) dlnorm(diffL[ind==x],  calibration$calibTab[x, 2], calibration$calibTab[x,3],
log = exclude))))
})
p_log
}) %>% Reduce("cbind", .)
if(ncores>1) stopCluster(cl)
} else {
pOut <- lapply(dat, function(x) {
p_log <- apply(crds, 1, function(p) {
zX    <- refracted(zenith(solar(x$Date), p[1], p[2]))
ExpL  <- calibration$MaxL(zX)
diffL <- (ExpL -  x$Light+0.05)
ind <- cut(zX, breaks = calibration$calibTab[,1], labels = FALSE)
sum(unlist(sapply(unique(ind), function(x) dlnorm(diffL[ind==x],  calibration$calibTab[x, 2], calibration$calibTab[x,3],
log = exclude, TRUE, FALSE))))
})
p_log
}) %>% Reduce("cbind", .)
}
rastOut <-  mapRast %>% st_as_sf() %>% st_centroid() %>% mutate(p = apply(pOut, 1, max)) %>% dplyr::select(p) %>%
st_rasterize(st_as_stars(st_bbox(bbox$map), dx = (resolution+2)*1000, dy = (resolution+2)*1000, values = NA_real_))
if(plot) {
pl <- ggplot() +
geom_sf(data = bbox$map, fill = "grey90", color = "grey10", show.legend = F) +
geom_stars(data = rastOut) +
scale_fill_viridis_c(na.value = "transparent")+
theme_light()
print(pl)
}
}
templateEstimate(tagdata = GRKN_breed, calibration = calib,
bbox = bbox, resolution = 25,
adjust = 300,
window = 24,
exclude = TRUE,
ncores = detectCores(),
plot = TRUE)
templateEstimate(tagdata = GRKN_breed, calibration = calib,
bbox = bbox, resolution = 25,
adjust = 300,
window = 24,
exclude = FALSE,
ncores = detectCores(),
plot = TRUE)
templateEstimate(tagdata = GRKN_breed, calibration = calib,
bbox = bbox, resolution = 25,
adjust = 300,
window = 24,
exclude = TRUE,
ncores = detectCores(),
plot = TRUE)
templateEstimate <- function(tagdata,
calibration,
bbox,
resolution = 15,
adjust = 300,
window = 24,
exclude = FALSE,
ingnoreNegatives = 5,
ncores = detectCores(),
plot = TRUE) {
sf_use_s2(FALSE)
mapRast <- st_rasterize(bbox$map %>% st_as_sf(), st_as_stars(st_bbox(bbox$map),
dx = resolution*1000, dy = resolution*1000, values = NA_real_))
centr <- map %>% st_centroid() %>% st_transform(4326) %>% st_coordinates()
crds  <- mapRast %>% st_as_sf() %>% st_centroid() %>% st_transform(4326) %>% st_coordinates() %>% suppressWarnings() %>% suppressMessages()
ss   <- solar(tagdata$Date)
zX   <- refracted(zenith(ss, centr[1,1], centr[1,2]))
dat  <- tagdata %>% as_tibble() %>%
mutate(ct = c(c(zX[-length(zX)]>zX[-1]), TRUE),
Date = as.POSIXct(ifelse(!ct, Date - adjust, Date), origin = "1970-01-01")) %>%
group_split(Window = cut(as.numeric((Date - Date[1])/60/60), window*c(0:nrow(.)), labels = FALSE, include.lowest = T))
if(ncores > 1) {
cl <- makeCluster(getOption("cl.cores", ncores))
clusterExport(cl, c('dat', 'calibration', 'crds', 'zenith', 'solar', 'refracted', 'exclude'), envir = environment())
pOut <- parLapply(cl, dat, function(x) {
p_log <- apply(crds, 1, function(p) {
zX    <- refracted(zenith(solar(x$Date), p[1], p[2]))
ExpL  <- calibration$MaxL(zX)
diffL <- (ExpL -  x$Light+0.05)
ind <- cut(zX, breaks = calibration$calibTab[,1], labels = FALSE)
sum(unlist(sapply(unique(ind), function(x) dlnorm(diffL[ind==x],  calibration$calibTab[x, 2], calibration$calibTab[x,3],
log = exclude))))
})
p_log
}) %>% Reduce("cbind", .)
if(ncores>1) stopCluster(cl)
} else {
pOut <- lapply(dat, function(x) {
p_log <- apply(crds, 1, function(p) {
zX    <- refracted(zenith(solar(x$Date), p[1], p[2]))
ExpL  <- calibration$MaxL(zX)
diffL <- (ExpL -  x$Light+0.05)
ind <- cut(zX, breaks = calibration$calibTab[,1], labels = FALSE)
sum(unlist(sapply(unique(ind), function(x) dlnorm(diffL[ind==x],  calibration$calibTab[x, 2], calibration$calibTab[x,3],
log = exclude, TRUE, FALSE))))
})
p_log
}) %>% Reduce("cbind", .)
}
rastOut <-  mapRast %>% st_as_sf() %>% st_centroid() %>% mutate(p = apply(pOut, 1, max)) %>% dplyr::select(p) %>%
st_rasterize(st_as_stars(st_bbox(bbox$map), dx = (resolution+2)*1000, dy = (resolution+2)*1000, values = NA_real_)) %>%
suppressWarnings() %>% suppressMessages()
if(plot) {
pl <- ggplot() +
geom_sf(data = bbox$map, fill = "grey90", color = "grey10", show.legend = F) +
geom_stars(data = rastOut) +
scale_fill_viridis_c(na.value = "transparent")+
theme_light()
print(pl)
}
}
templateEstimate(tagdata = GRKN_breed, calibration = calib,
bbox = bbox, resolution = 25,
adjust = 300,
window = 24,
exclude = FALSE,
ncores = detectCores(),
plot = TRUE)
templateEstimate <- function(tagdata,
calibration,
bbox,
resolution = 15,
adjust = 300,
window = 24,
exclude = FALSE,
ncores = detectCores(),
plot = TRUE) {
sf_use_s2(FALSE)
mapRast <- st_rasterize(bbox$map %>% st_as_sf(), st_as_stars(st_bbox(bbox$map),
dx = resolution*1000, dy = resolution*1000, values = NA_real_))
centr <- map %>% st_centroid() %>% st_transform(4326) %>% st_coordinates()
crds  <- mapRast %>% st_as_sf() %>% st_centroid() %>% st_transform(4326) %>% st_coordinates() %>% suppressWarnings() %>% suppressMessages()
ss   <- solar(tagdata$Date)
zX   <- refracted(zenith(ss, centr[1,1], centr[1,2]))
dat  <- tagdata %>% as_tibble() %>%
mutate(ct = c(c(zX[-length(zX)]>zX[-1]), TRUE),
Date = as.POSIXct(ifelse(!ct, Date - adjust, Date), origin = "1970-01-01")) %>%
group_split(Window = cut(as.numeric((Date - Date[1])/60/60), window*c(0:nrow(.)), labels = FALSE, include.lowest = T))
if(ncores > 1) {
cl <- makeCluster(getOption("cl.cores", ncores))
clusterExport(cl, c('dat', 'calibration', 'crds', 'zenith', 'solar', 'refracted', 'exclude'), envir = environment())
pOut <- parLapply(cl, dat, function(x) {
p_log <- apply(crds, 1, function(p) {
zX    <- refracted(zenith(solar(x$Date), p[1], p[2]))
ExpL  <- calibration$MaxL(zX)
diffL <- (ExpL -  x$Light+0.05)
ind <- cut(zX, breaks = calibration$calibTab[,1], labels = FALSE)
sum(unlist(sapply(unique(ind), function(x) dlnorm(diffL[ind==x],  calibration$calibTab[x, 2], calibration$calibTab[x,3],
log = exclude))))
})
p_log
}) %>% Reduce("cbind", .)
if(ncores>1) stopCluster(cl)
} else {
pOut <- lapply(dat, function(x) {
p_log <- apply(crds, 1, function(p) {
zX    <- refracted(zenith(solar(x$Date), p[1], p[2]))
ExpL  <- calibration$MaxL(zX)
diffL <- (ExpL -  x$Light+0.05)
ind <- cut(zX, breaks = calibration$calibTab[,1], labels = FALSE)
sum(unlist(sapply(unique(ind), function(x) dlnorm(diffL[ind==x],  calibration$calibTab[x, 2], calibration$calibTab[x,3],
log = exclude, TRUE, FALSE))))
})
p_log
}) %>% Reduce("cbind", .)
}
rastOut <-  mapRast %>% st_as_sf() %>% st_centroid() %>% mutate(p = apply(pOut, 1, max)) %>% dplyr::select(p) %>%
st_rasterize(st_as_stars(st_bbox(bbox$map), dx = (resolution+2)*1000, dy = (resolution+2)*1000, values = NA_real_)) %>%
suppressWarnings() %>% suppressMessages()
if(plot) {
pl <- ggplot() +
geom_sf(data = bbox$map, fill = "grey90", color = "grey10", show.legend = F) +
geom_stars(data = rastOut) +
scale_fill_viridis_c(na.value = "transparent")+
theme_light()
print(pl)
}
list(fit = rastOut, map = bbox$map)
}
templateEstimate <- function(tagdata,
calibration,
bbox,
resolution = 15,
adjust = 300,
window = 24,
exclude = FALSE,
ncores = detectCores(),
plot = TRUE) {
sf_use_s2(FALSE)
mapRast <- st_rasterize(bbox$map %>% st_as_sf(), st_as_stars(st_bbox(bbox$map),
dx = resolution*1000, dy = resolution*1000, values = NA_real_))
centr <- map %>% st_centroid() %>% st_transform(4326) %>% st_coordinates()
crds  <- mapRast %>% st_as_sf() %>% st_centroid() %>% st_transform(4326) %>% st_coordinates() %>% suppressWarnings() %>% suppressMessages()
ss   <- solar(tagdata$Date)
zX   <- refracted(zenith(ss, centr[1,1], centr[1,2]))
dat  <- tagdata %>% as_tibble() %>%
mutate(ct = c(c(zX[-length(zX)]>zX[-1]), TRUE),
Date = as.POSIXct(ifelse(!ct, Date - adjust, Date), origin = "1970-01-01")) %>%
group_split(Window = cut(as.numeric((Date - Date[1])/60/60), window*c(0:nrow(.)), labels = FALSE, include.lowest = T))
if(ncores > 1) {
cl <- makeCluster(getOption("cl.cores", ncores))
clusterExport(cl, c('dat', 'calibration', 'crds', 'zenith', 'solar', 'refracted', 'exclude'), envir = environment())
pOut <- parLapply(cl, dat, function(x) {
p_log <- apply(crds, 1, function(p) {
zX    <- refracted(zenith(solar(x$Date), p[1], p[2]))
ExpL  <- calibration$MaxL(zX)
diffL <- (ExpL -  x$Light+0.05)
ind <- cut(zX, breaks = calibration$calibTab[,1], labels = FALSE)
sum(unlist(sapply(unique(ind), function(x) dlnorm(diffL[ind==x],  calibration$calibTab[x, 2], calibration$calibTab[x,3],
log = exclude))))
})
p_log
}) %>% Reduce("cbind", .)
if(ncores>1) stopCluster(cl)
} else {
pOut <- lapply(dat, function(x) {
p_log <- apply(crds, 1, function(p) {
zX    <- refracted(zenith(solar(x$Date), p[1], p[2]))
ExpL  <- calibration$MaxL(zX)
diffL <- (ExpL -  x$Light+0.05)
ind <- cut(zX, breaks = calibration$calibTab[,1], labels = FALSE)
sum(unlist(sapply(unique(ind), function(x) dlnorm(diffL[ind==x],  calibration$calibTab[x, 2], calibration$calibTab[x,3],
log = exclude, TRUE, FALSE))))
})
p_log
}) %>% Reduce("cbind", .)
}
rastOut <-  mapRast %>% st_as_sf() %>% st_centroid() %>% mutate(p = apply(pOut, 1, max)) %>% dplyr::select(p) %>%
st_rasterize(st_as_stars(st_bbox(bbox$map), dx = (resolution+2)*1000, dy = (resolution+2)*1000, values = NA_real_)) %>%
suppressWarnings() %>% suppressMessages()
if(plot) {
pl <- ggplot() +
geom_sf(data = bbox$map, fill = "grey90", color = "grey10", show.legend = F) +
geom_stars(data = rastOut) +
scale_fill_viridis_c(na.value = "transparent")+
theme_light()
print(pl)
}
list(fit = rastOut, map = bbox$map)
}
tFit <- templateEstimate(tagdata = GRKN_breed, calibration = calib,
bbox = bbox, resolution = 25,
adjust = 300,
window = 24,
exclude = FALSE,
ncores = detectCores(),
plot = TRUE)
fit <- tFit
fit %>% st_as_sf()
fit$fit %>% st_as_sf()
quantiles = c(0.5, 1)
sf <- fit$fit %>% st_as_sf()
sfFit <- fit$fit %>% st_as_sf()
quantiles[1]
range <- sfFit %>% filter(p >= quantile(p, probs = quantiles[1])) %>% st_transform(4326) %>% st_bbox()
range
loc   <- sfFit %>% filter(p >= quantile(p, probs = quantiles[2])) %>% st_transform(4326) %>% st_union() %>% st_centroid() %>% st_coordinates()
loc
loc   <- sfFit %>% filter(p >= quantile(p, probs = quantiles[2])) %>% st_transform(4326) %>%
st_union() %>% st_centroid() %>% st_coordinates() %>% suppressMessages() %>% suppressWarnings()
loc
plot = T
out <- tibble(Lon = loc[1,1], Lat = loc[1,2], Lon_min = range[1], Lon_max = range[2], Lat_min = range[3], Lat_max = range[4])
out
pl <- ggplot() +
geom_sf(data = fit$map, fill = "grey90", color = "grey10", show.legend = F) +
geom_stars(data = fit$fit) +
scale_fill_viridis_c(na.value = "transparent")+
theme_light()
print(pl)
pl <- ggplot() +
geom_sf(data = fit$map, fill = "grey90", color = "grey10", show.legend = F) +
geom_stars(data = fit$fit) +
scale_fill_viridis_c(na.value = "transparent") +
geom_sf(data = out %>% st_as_sf(coords = c("Lon", "Lat"), crs = 4326)) +
theme_light()
out %>% st_as_sf(coords = c("Lon", "Lat"), crs = 4326)
pl <- ggplot() +
geom_sf(data = fit$map, fill = "grey90", color = "grey10", show.legend = F) +
geom_stars(data = fit$fit) +
scale_fill_viridis_c(na.value = "transparent") +
geom_sf(data = out %>% st_as_sf(coords = c("Lon", "Lat"), crs = 4326), pch = 21, size = 3) +
theme_light()
out %>% st_as_sf(coords = c("Lon", "Lat"), crs = 4326) %>% st_transform(st_crs(fit$map))
pl <- ggplot() +
geom_sf(data = fit$map, fill = "grey90", color = "grey10", show.legend = F) +
geom_stars(data = fit$fit) +
scale_fill_viridis_c(na.value = "transparent") +
geom_sf(data = out %>% st_as_sf(coords = c("Lon", "Lat"), crs = 4326) %>% st_transform(st_crs(fit$map))) +
theme_light()
out %>% st_as_sf(coords = c("Lon", "Lat"), crs = 4326) %>% st_transform(st_crs(fit$map))
print(pl)
pl <- ggplot() +
geom_sf(data = fit$map, fill = "grey90", color = "grey10", show.legend = F) +
geom_stars(data = fit$fit) +
scale_fill_viridis_c(na.value = "transparent") +
geom_sf(data = out %>% st_as_sf(coords = c("Lon", "Lat"), crs = 4326)) +
theme_light()
print(pl)
loc   <- sfFit %>% filter(p == min(p)) %>% st_transform(4326) %>%
st_union() %>% st_centroid() %>% st_coordinates() %>% suppressMessages() %>% suppressWarnings()
loc
out <- tibble(Lon = loc[1,1], Lat = loc[1,2], Lon_min = range[1], Lon_max = range[2], Lat_min = range[3], Lat_max = range[4])
pl <- ggplot() +
geom_sf(data = fit$map, fill = "grey90", color = "grey10", show.legend = F) +
geom_stars(data = fit$fit) +
scale_fill_viridis_c(na.value = "transparent") +
geom_sf(data = out %>% st_as_sf(coords = c("Lon", "Lat"), crs = 4326)) +
theme_light()
print(pl)
loc
loc   <- sfFit %>% filter(p == max(p)) %>% st_transform(4326) %>%
st_union() %>% st_centroid() %>% st_coordinates() %>% suppressMessages() %>% suppressWarnings()
out <- tibble(Lon = loc[1,1], Lat = loc[1,2], Lon_min = range[1], Lon_max = range[2], Lat_min = range[3], Lat_max = range[4])
if(plot) {
pl <- ggplot() +
geom_sf(data = fit$map, fill = "grey90", color = "grey10", show.legend = F) +
geom_stars(data = fit$fit) +
scale_fill_viridis_c(na.value = "transparent") +
geom_sf(data = out %>% st_as_sf(coords = c("Lon", "Lat"), crs = 4326)) +
theme_light()
print(pl)
}
sfFit <- fit$fit %>% st_as_sf()
range <- sfFit %>% filter(p >= quantile(p, probs = quantiles[1])) %>% st_transform(4326) %>% st_bbox()
loc   <- sfFit %>% filter(p == max(p)) %>% st_transform(4326) %>%
st_union() %>% st_centroid() %>% st_coordinates() %>% suppressMessages() %>% suppressWarnings()
out <- tibble(Lon = loc[1,1], Lat = loc[1,2], Lon_min = range[1], Lon_max = range[2], Lat_min = range[3], Lat_max = range[4])
if(plot) {
pl <- ggplot() +
geom_sf(data = fit$map, fill = "grey90", color = "grey10", show.legend = F) +
geom_stars(data = fit$fit) +
scale_fill_viridis_c(na.value = "transparent") +
geom_sf(data = out %>% st_as_sf(coords = c("Lon", "Lat"), crs = 4326)) +
theme_light()
print(pl)
}
range
pl <- ggplot() +
geom_sf(data = fit$map, fill = "grey90", color = "grey10", show.legend = F) +
geom_stars(data = fit$fit) +
scale_fill_viridis_c(na.value = "transparent") +
geom_sf(data = out %>% st_as_sf(coords = c("Lon", "Lat"), crs = 4326)) +
theme_light()
print(pl)
#' Template fit
#
#' @title Template fit
#'
#' @export
templateEstimate <- function(tagdata,
calibration,
bbox,
resolution = 15,
adjust = 300,
window = 24,
exclude = FALSE,
ncores = detectCores(),
plot = TRUE) {
sf_use_s2(FALSE)
mapRast <- st_rasterize(bbox$map %>% st_as_sf(), st_as_stars(st_bbox(bbox$map),
dx = resolution*1000, dy = resolution*1000, values = NA_real_))
centr <- map %>% st_centroid() %>% st_transform(4326) %>% st_coordinates()
crds  <- mapRast %>% st_as_sf() %>% st_centroid() %>% st_transform(4326) %>% st_coordinates() %>% suppressWarnings() %>% suppressMessages()
ss   <- solar(tagdata$Date)
zX   <- refracted(zenith(ss, centr[1,1], centr[1,2]))
dat  <- tagdata %>% as_tibble() %>%
mutate(ct = c(c(zX[-length(zX)]>zX[-1]), TRUE),
Date = as.POSIXct(ifelse(!ct, Date - adjust, Date), origin = "1970-01-01")) %>%
group_split(Window = cut(as.numeric((Date - Date[1])/60/60), window*c(0:nrow(.)), labels = FALSE, include.lowest = T))
if(ncores > 1) {
cl <- makeCluster(getOption("cl.cores", ncores))
clusterExport(cl, c('dat', 'calibration', 'crds', 'zenith', 'solar', 'refracted', 'exclude'), envir = environment())
pOut <- parLapply(cl, dat, function(x) {
p_log <- apply(crds, 1, function(p) {
zX    <- refracted(zenith(solar(x$Date), p[1], p[2]))
ExpL  <- calibration$MaxL(zX)
diffL <- (ExpL -  x$Light+0.05)
ind <- cut(zX, breaks = calibration$calibTab[,1], labels = FALSE)
sum(unlist(sapply(unique(ind), function(x) dlnorm(diffL[ind==x],  calibration$calibTab[x, 2], calibration$calibTab[x,3],
log = exclude))))
})
p_log
}) %>% Reduce("cbind", .)
if(ncores>1) stopCluster(cl)
} else {
pOut <- lapply(dat, function(x) {
p_log <- apply(crds, 1, function(p) {
zX    <- refracted(zenith(solar(x$Date), p[1], p[2]))
ExpL  <- calibration$MaxL(zX)
diffL <- (ExpL -  x$Light+0.05)
ind <- cut(zX, breaks = calibration$calibTab[,1], labels = FALSE)
sum(unlist(sapply(unique(ind), function(x) dlnorm(diffL[ind==x],  calibration$calibTab[x, 2], calibration$calibTab[x,3],
log = exclude, TRUE, FALSE))))
})
p_log
}) %>% Reduce("cbind", .)
}
rastOut <-  mapRast %>% st_as_sf() %>% st_centroid() %>% mutate(p = apply(pOut, 1, max)) %>% dplyr::select(p) %>%
st_rasterize(st_as_stars(st_bbox(bbox$map), dx = (resolution+2)*1000, dy = (resolution+2)*1000, values = NA_real_)) %>%
suppressWarnings() %>% suppressMessages()
if(plot) {
pl <- ggplot() +
geom_sf(data = bbox$map, fill = "grey90", color = "grey10", show.legend = F) +
geom_stars(data = rastOut) +
scale_fill_viridis_c(na.value = "transparent")+
theme_light()
print(pl)
}
list(fit = rastOut, map = bbox$map, log = exclude)
}
#' Extract Location
#
#' @title Extract breeding site
#'
#' @export
summaryLocation <- function(fit, quantiles = c(0.5), plot = T) {
sfFit <- fit$fit %>% st_as_sf()
if(fit$log) {
range <- sfFit %>% filter(p >= quantile(p, probs = 1-quantiles[1])) %>% st_transform(4326) %>% st_bbox()
loc   <- sfFit %>% filter(p == min(p)) %>% st_transform(4326) %>%
st_union() %>% st_centroid() %>% st_coordinates() %>% suppressMessages() %>% suppressWarnings()
} else {
range <- sfFit %>% filter(p >= quantile(p, probs = quantiles[1])) %>% st_transform(4326) %>% st_bbox()
loc   <- sfFit %>% filter(p == max(p)) %>% st_transform(4326) %>%
st_union() %>% st_centroid() %>% st_coordinates() %>% suppressMessages() %>% suppressWarnings()
}
out <- tibble(Lon = loc[1,1], Lat = loc[1,2], Lon_min = range[1], Lon_max = range[2], Lat_min = range[3], Lat_max = range[4])
if(plot) {
pl <- ggplot() +
geom_sf(data = fit$map, fill = "grey90", color = "grey10", show.legend = F) +
geom_stars(data = fit$fit) +
scale_fill_viridis_c(na.value = "transparent") +
geom_sf(data = out %>% st_as_sf(coords = c("Lon", "Lat"), crs = 4326)) +
theme_light()
print(pl)
}
out
}
